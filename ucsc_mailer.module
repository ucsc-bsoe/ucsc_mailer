<?php

use Drupal\ucsc_mailer\Controller\UCSCMailerSenderMail;
use Drupal\Core\Render\Markup;
use Drupal\node\Entity\Node;
use \Drupal\Component\Utility\Unicode;

/**
* Implements hook_mail(). Notes on configuration of mail. Must use Swift Mailer.
 * Set '/admin/config/system/mailsystem' to Formatter: Swift Mailer, Sender:
 * Swift Mailer, Theme: BSOE Plain.
 * Set 'admin/config/swiftmailer/transport' - Transport tab: Transport Types: PHP
 * Messages tab: Message Format: HTML, Plain Text Version: Yes (Generate checked),
 * Character set: UTF-8
*/

function ucsc_mailer_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';	
  switch ($key) {
    case 'mailer_create':
      $message['subject'] = $params['node_title'];
      $message['body'][] = ucsc_mailer_base($params['body']);

      // Set the header 'From'
      $message['from'] = $message['headers']['From'] = (!empty($params['field_mailer_sender'])) ? Unicode::mimeHeaderEncode($params['field_mailer_sender'], TRUE) . ' <' . $params['field_mailer_sender_address'] . '>' : $params['field_mailer_sender_address'];
      
      // Set the header 'Cc'
      if (!empty($params['field_mailer_cc'])) {
         $message['headers']['Cc'] = $params['field_mailer_cc'];
      }

      // Set the header 'Bcc'
      if (!empty($params['field_mailer_bcc'])) {
         $message['headers']['Bcc'] = $params['field_mailer_bcc'];
      }

      // Set the 'reply-to'
      $message['reply-to'] = $message['headers']['Reply-to'] = $params['field_mailer_sender_address'];

      // Set the header 'Sender'
      $message['headers']['Sender'] = ($params['field_mailer_sender']) ? Unicode::mimeHeaderEncode($params['field_mailer_sender'], TRUE) . ' <' . $params['field_mailer_sender_address'] . '>' : $params['field_mailer_sender_address'];
      break;
 }
}

/**
* Implements hook_entity_insert().
*/
function ucsc_mailer_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  require_once("ucsc_mailer_sender_send.php");
  ucsc_mailer_sender_send($entity);
}

/**
* Implements hook_entity_update().
*/
function ucsc_mailer_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
  require_once("ucsc_mailer_sender_send.php");
  ucsc_mailer_sender_send($entity);
}

/**
 * Implements hook_preprocess_swiftmailer().
 */
function ucsc_mailer_base($text) {
  global $base_path;
  $pattern = '/(src|href)=(\'|")' . preg_quote($base_path, '/') . '/';
  $replacement = '$1=$2' . \Drupal\Core\Url::fromRoute('<front>', array(), array('absolute' => TRUE))->toString() . "Hello there";
  $change_base_path = \Drupal\Core\Render\Markup::create(preg_replace($pattern, $replacement, $text));
  return $change_base_path;
}
